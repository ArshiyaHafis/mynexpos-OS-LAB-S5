//------------------------------------------->IDLE<---------------------------------------
//module 7
loadi(54, 67);
loadi(55, 68);


// print "os startup";


//load idle code
loadi(69,11);


SP = [PROCESS_TABLE + 11]*512 - 1;

// print "boot module";
call BOOT_MODULE;

//IDLE PROGRAM
PTBR=PAGE_TABLE_BASE;  //as PID of idle process is 0
PTLR = 10;

//Library - not used
[PTBR+0] = -1;
[PTBR+1] = "0100";
[PTBR+2] = -1;
[PTBR+3] = "0100";

//Heap - not used
[PTBR+4] = -1;
[PTBR+5] = "0110";
[PTBR+6] = -1;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 70;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0110";

//PROCESS TABLE FOR IDLE PID=0	
[PROCESS_TABLE + 1] = 0;		//PID
[PROCESS_TABLE + 4] = RUNNING;		//RUNNING : PROCESS NEVER EXECUTED BEFORE
[PROCESS_TABLE + 11] = 76;		//UAreaPgNo.
[PROCESS_TABLE + 12] = 0;		//KPTR
[PROCESS_TABLE + 13] = 8*512;		//UPTR : LOGICAL ADDRESS OF userSP
[PROCESS_TABLE + 14] = PTBR;
[PROCESS_TABLE + 15] = PTLR;

[70*512] = [69*512 + 1];	//ENTRY POINTER

// Swapper Daemon Process 15
PTBR = PAGE_TABLE_BASE + 20*15; 
PTLR = 10;

//Library
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";


// Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

// Code 
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

// Stack  
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

alias swpTable R1;

swpTable = PROCESS_TABLE + 16*15;
[swpTable ] = 0 ;
[swpTable +  1] = 15 ;
[swpTable + 3] = 0;  
[swpTable + 4] = CREATED;
[swpTable +  11] = 82;
[swpTable + 12] = 0; 	
[swpTable + 13] = 8*512; 	
[swpTable + 14] = PAGE_TABLE_BASE + 20*15;
[swpTable + 15] = 10; 

PTBR = PAGE_TABLE_BASE; 
PTLR = 10;

[SYSTEM_STATUS_TABLE+1] = 0;

[81 * 512] = [69*512 + 1];



SP = 8*512;		//point to stack at 8th logical page
ireturn;
