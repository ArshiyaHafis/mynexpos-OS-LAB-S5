alias functionNum R1;
if(functionNum == 1) then					//get free page
    [SYSTEM_STATUS_TABLE+3] = [SYSTEM_STATUS_TABLE+3] + 1;
    while([SYSTEM_STATUS_TABLE+2] == 0)do
        [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4] = WAIT_MEM;
        multipush(R1,R2);    
        call MOD_5;
        multipop(R1,R2);
    endwhile;
    [SYSTEM_STATUS_TABLE+2] = [SYSTEM_STATUS_TABLE+2]  - 1;
    [SYSTEM_STATUS_TABLE+3] = [SYSTEM_STATUS_TABLE+3]  - 1;


    alias i R3;
    i = 76;

    while(i < MAX_MEM_PAGE)do
        if([MEMORY_FREE_LIST + i] == 0)then
            [MEMORY_FREE_LIST + i] = [MEMORY_FREE_LIST + i]+1;
            break;
        endif;
        i = i + 1;
    endwhile; 

    R0=i;


endif;

if(functionNum ==  2) then					//release page
    alias pgNo R2;
    [MEMORY_FREE_LIST + pgNo] = [MEMORY_FREE_LIST + pgNo]-1;
    
    if([MEMORY_FREE_LIST + pgNo] == 0) then
        [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
    endif;
    
    alias i R3;
    i = 0;
    while(i < 16)do
        if([PROCESS_TABLE + i*16 + 4] == WAIT_MEM)then
            [PROCESS_TABLE + i*16 + 4] = READY;
        endif;
        i = i + 1;
       
    endwhile;
endif;


if(functionNum == 3) then 						//get free block
    alias i R2;
    i = DISK_FREE_AREA;
    while(i < DISK_SWAP_AREA)do
        if([DISK_FREE_LIST + i] == 0) then
            [DISK_FREE_LIST + i] = 1;
            R0 = i;
            return;
        endif;
        i = i + 1;
    endwhile;
    R0 = -1;
endif;



if(functionNum ==  4) then 						// release block
    alias bNo R2;

    [DISK_FREE_LIST + bNo] = [DISK_FREE_LIST + bNo] - 1;

endif;


if(functionNum ==  5) then 						//get code page
    alias bNo R2;
    alias i R3;
    alias j R4;
    i = 0;
    while(i < MAX_PROC_NUM)do
        alias ptbr R5;
        ptbr = [PROCESS_TABLE + i * 16 + 14 ];
        j = 4;
        while(j < 8) do
            if([DISK_MAP_TABLE + i *10 + j] == bNo && [ptbr + (2*j)] != -1) then
                R0 = [ptbr + (2*j)];
                [MEMORY_FREE_LIST + R0] = [MEMORY_FREE_LIST + R0] + 1;
                return;
            endif;
            j = j + 1;
        endwhile;
        i = i + 1;
    endwhile;


    multipush(R1,R2,R3);
    R1 = GET_FREE_PAGE;
    call MEMORY_MANAGER; // memory manager
    multipop(R1,R2,R3);
    
    multipush(R0,R1,R2,R3);
    R1 = DISK_LOAD;
    R4 = bNo;
    R2 = [SYSTEM_STATUS_TABLE+1];
    R3 = R0;
    call DEVICE_MANAGER; // DEVICE_MANAGER 
    multipop(R0,R1,R2,R3);


endif;


if(functionNum == 6) then					//get swap block
    alias i R2;
    R0 = -1;
    i = DISK_SWAP_AREA;
    while(i < DISK_SIZE) do
        if([DISK_FREE_LIST + i] == 0) then
            [DISK_FREE_LIST + i]=1;
            R0 = i;
            break;
        endif;
        i = i +1;
    endwhile;

endif;





return;
