//------------------------------------------->IDLE<---------------------------------------
//module 7
loadi(54, 67);
loadi(55, 68);

//load library code form disk to memory
loadi(63,13);
loadi(64,14);

print "os startup";
//load init program
loadi(65,7);
loadi(66,8);

//load int10 module
loadi(22,35);
loadi(23,36);

//load exception handler
loadi(2, 15);
loadi(3, 16);

//load the timer interupt routine
loadi(4, 17);
loadi(5, 18);

//load int7
loadi(16,29);
loadi(17,30);

//load idle code
loadi(69,11);
loadi(70,12);


SP = [PROCESS_TABLE + 11]*512 - 1;

print "boot module";
call BOOT_MODULE;

//IDLE PROGRAM
PTBR=PAGE_TABLE_BASE;  //as PID of idle process is 0
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 84;
[PTBR+5] = "0110";
[PTBR+6] = 85;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = 83;
[PTBR+19] = "0110";

//PROCESS TABLE FOR IDLE PID=0	
[PROCESS_TABLE + 1] = 0;		//PID
[PROCESS_TABLE + 4] = RUNNING;		//RUNNING : PROCESS NEVER EXECUTED BEFORE
[PROCESS_TABLE + 11] = 82;		//UAreaPgNo.
[PROCESS_TABLE + 12] = 0;		//KPTR
[PROCESS_TABLE + 13] = 8*512;		//UPTR : LOGICAL ADDRESS OF userSP
[PROCESS_TABLE + 14] = PTBR;
[PROCESS_TABLE + 15] = PTLR;
[SYSTEM_STATUS_TABLE + 1] = 0;

[81*512] = [69*512 + 1];	//ENTRY POINTER

SP = 8*512;		//point to stack at 8th logical page
ireturn;
