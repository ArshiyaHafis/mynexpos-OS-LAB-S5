[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 7; //MODE FLAG of the current process = system call number 7 for read system call


alias userSP R0;
userSP=SP;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 13] = SP;		//UPTR = SP
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]* 16) + 11] * 512 - 1;	//SP = UAreaPgNo * 512 - 1



//RETRIEVE FILE DESCP FROM USERSP - 4
alias physicalPageNum R1;
alias offset R2;
alias fileDescPhysicalAddr R3;
physicalPageNum = [PTBR + 2 * ((userSP - 4)/ 512)];
offset = (userSP - 4) % 512;
fileDescPhysicalAddr = (physicalPageNum * 512) + offset;
alias fileDescriptor R4;
fileDescriptor=[fileDescPhysicalAddr];


if (fileDescriptor != -1)
then
	alias physicalAddrRetVal R5;
	physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
	[physicalAddrRetVal] = -1;
else
	alias word R5;
	word = [([PTBR + 2* ((userSP - 3) / 512)] * 512) + ((userSP - 3) % 512)];		//word address
	
	multipush(R0,R1,R2,R3,R4,R5);
	
	R1 = 4;					//function number of Terminal Read
	R2 = [SYSTEM_STATUS_TABLE+1];		//pid of current
	R3 = word;				//word address
	call MOD_4;				//dev manager
	multipop(R0,R1,R2,R3,R4,R5);
	
	alias physicalAddrRetVal R6;
	physicalAddrRetVal = ([PTBR + 2*((userSP - 1)/512)] * 512) + ((userSP - 1) % 512);
	[physicalAddrRetVal] = 0;		//no return value for read
endif;


[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;			//MODE FLAG in the process table to 0
SP = userSP;
ireturn;



